{"ast":null,"code":"var _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Search, Plus, Edit3, Trash2, ExternalLink, Tag, Bookmark, Download, Upload, RotateCcw } from 'lucide-react';\nimport './App.css';\nconst API_BASE_URL = '/api';\nconst BookmarkManager = () => {\n  _s();\n  const [bookmarks, setBookmarks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [editingBookmark, setEditingBookmark] = useState(null);\n  const [formData, setFormData] = useState({\n    title: '',\n    url: '',\n    category: '',\n    description: ''\n  });\n\n  // API helper function\n  const apiCall = async (endpoint, options = {}) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers\n        },\n        ...options\n      });\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.error || `HTTP ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error(`API call failed for ${endpoint}:`, error);\n      throw error;\n    }\n  };\n  const loadBookmarks = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const data = await apiCall('/bookmarks');\n      setBookmarks(data);\n    } catch (error) {\n      setError(`Failed to load bookmarks: ${error.message}`);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    loadBookmarks();\n  }, [loadBookmarks]);\n\n  // ... everything else remains unchanged (form handlers, import/export, UI, etc.)\n\n  // Keep all your JSX and other logic as-is from the original\n  // (You can paste the rest of your component from your version below this comment)\n\n  // ⬇️ PLACE THE REMAINDER OF YOUR ORIGINAL JSX + FUNCTION LOGIC HERE ⬇️\n  // The entire return JSX block and helper functions\n  // (handleSubmit, handleEdit, handleDelete, etc.) are unchanged\n};\n_s(BookmarkManager, \"s5wKLLgvSI9S706bIbzjtjxGCt0=\");\n_c = BookmarkManager;\nexport default BookmarkManager;\nvar _c;\n$RefreshReg$(_c, \"BookmarkManager\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Search","Plus","Edit3","Trash2","ExternalLink","Tag","Bookmark","Download","Upload","RotateCcw","API_BASE_URL","BookmarkManager","_s","bookmarks","setBookmarks","loading","setLoading","error","setError","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","showAddForm","setShowAddForm","editingBookmark","setEditingBookmark","formData","setFormData","title","url","category","description","apiCall","endpoint","options","response","fetch","headers","ok","errorData","json","catch","Error","status","console","loadBookmarks","data","message","_c","$RefreshReg$"],"sources":["/Users/juanfernandes/Sites/bookmark-manager/client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, useCallback } from 'react'\nimport { Search, Plus, Edit3, Trash2, ExternalLink, Tag, Bookmark, Download, Upload, RotateCcw } from 'lucide-react'\nimport './App.css'\n\nconst API_BASE_URL = '/api'\n\nconst BookmarkManager = () => {\n  const [bookmarks, setBookmarks] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [selectedCategory, setSelectedCategory] = useState('All')\n  const [showAddForm, setShowAddForm] = useState(false)\n  const [editingBookmark, setEditingBookmark] = useState(null)\n  const [formData, setFormData] = useState({\n    title: '',\n    url: '',\n    category: '',\n    description: ''\n  })\n\n  // API helper function\n  const apiCall = async (endpoint, options = {}) => {\n    try {\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\n        headers: {\n          'Content-Type': 'application/json',\n          ...options.headers\n        },\n        ...options\n      })\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}))\n        throw new Error(errorData.error || `HTTP ${response.status}`)\n      }\n\n      return await response.json()\n    } catch (error) {\n      console.error(`API call failed for ${endpoint}:`, error)\n      throw error\n    }\n  }\n\n  const loadBookmarks = useCallback(async () => {\n    try {\n      setLoading(true)\n      setError(null)\n      const data = await apiCall('/bookmarks')\n      setBookmarks(data)\n    } catch (error) {\n      setError(`Failed to load bookmarks: ${error.message}`)\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    loadBookmarks()\n  }, [loadBookmarks])\n\n  // ... everything else remains unchanged (form handlers, import/export, UI, etc.)\n\n  // Keep all your JSX and other logic as-is from the original\n  // (You can paste the rest of your component from your version below this comment)\n\n  // ⬇️ PLACE THE REMAINDER OF YOUR ORIGINAL JSX + FUNCTION LOGIC HERE ⬇️\n  // The entire return JSX block and helper functions\n  // (handleSubmit, handleEdit, handleDelete, etc.) are unchanged\n}\n\nexport default BookmarkManager\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}