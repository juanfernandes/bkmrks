[{"/Users/juanfernandes/Sites/bookmark-manager/client/src/index.js":"1","/Users/juanfernandes/Sites/bookmark-manager/client/src/App.js":"2","/Users/juanfernandes/Sites/bookmark-manager/client/src/reportWebVitals.js":"3"},{"size":535,"mtime":1748966293038,"results":"4","hashOfConfig":"5"},{"size":11828,"mtime":1750888149516,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1748966293039,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2bcpxi",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juanfernandes/Sites/bookmark-manager/client/src/index.js",[],[],"/Users/juanfernandes/Sites/bookmark-manager/client/src/App.js",["17","18","19"],[],"/Users/juanfernandes/Sites/bookmark-manager/client/src/reportWebVitals.js",[],[],{"ruleId":"20","severity":2,"message":"21","line":27,"column":39,"nodeType":"22","messageId":"23","endLine":27,"endColumn":51},{"ruleId":"24","severity":1,"message":"25","line":45,"column":9,"nodeType":"26","endLine":62,"endColumn":4,"suggestions":"27"},{"ruleId":"20","severity":2,"message":"21","line":131,"column":39,"nodeType":"22","messageId":"23","endLine":131,"endColumn":51},"no-undef","'API_BASE_URL' is not defined.","Identifier","undef","react-hooks/exhaustive-deps","The 'loadBookmarks' function makes the dependencies of useEffect Hook (at line 66) change on every render. To fix this, wrap the definition of 'loadBookmarks' in its own useCallback() Hook.","VariableDeclarator",["28"],{"desc":"29","fix":"30"},"Wrap the definition of 'loadBookmarks' in its own useCallback() Hook.",{"range":"31","text":"32"},[1357,1764],"useCallback(async () => {\n    try {\n      setLoading(true)\n      setError(null)\n\n      const response = await fetch('/bookmarks.json')\n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}`)\n      }\n\n      const data = await response.json()\n      setBookmarks(data)\n    } catch (error) {\n      setError(`Failed to load bookmarks: ${error.message}`)\n    } finally {\n      setLoading(false)\n    }\n  })"]